{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://F%3A/web_lab4/app/api/cards/new/route.tsx"],"sourcesContent":["import fs from \"fs\"\r\nimport { NextResponse } from \"next/server\"\r\nimport path from \"path\"\r\n\r\nconst dataFilePath = path.join(process.cwd(), \"data\", \"cards.json\")\r\n\r\nexport async function POST(request: Request) {\r\n\ttry {\r\n\t\tconst newCard = await request.json()\r\n\r\n\t\tconst data = fs.readFileSync(dataFilePath, \"utf8\")\r\n\t\tlet cards = JSON.parse(data)\r\n\r\n\t\tcards.push(newCard)\r\n\r\n\t\tfs.writeFileSync(dataFilePath, JSON.stringify(cards, null, 2))\r\n\r\n\t\treturn NextResponse.json(\r\n\t\t\t{ message: \"Card added successfully\" },\r\n\t\t\t{ status: 200 }\r\n\t\t)\r\n\t} catch (error) {\r\n\t\tconsole.error(error)\r\n\t\treturn NextResponse.json({ error: \"Failed to load cards\" }, { status: 500 })\r\n\t}\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,eAAe,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAE/C,eAAe,KAAK,OAAgB;IAC1C,IAAI;QACH,MAAM,UAAU,MAAM,QAAQ,IAAI;QAElC,MAAM,OAAO,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,cAAc;QAC3C,IAAI,QAAQ,KAAK,KAAK,CAAC;QAEvB,MAAM,IAAI,CAAC;QAEX,2FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,cAAc,KAAK,SAAS,CAAC,OAAO,MAAM;QAE3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACvB;YAAE,SAAS;QAA0B,GACrC;YAAE,QAAQ;QAAI;IAEhB,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACD"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}