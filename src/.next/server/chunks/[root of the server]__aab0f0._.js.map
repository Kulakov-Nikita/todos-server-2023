{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://F%3A/web_lab4/app/api/cards/%5Bid%5D/route.tsx"],"sourcesContent":["import { CardData } from \"@/components/TodoCard/CardData\"\r\nimport fs from \"fs\"\r\nimport { NextRequest, NextResponse } from \"next/server\"\r\nimport path from \"path\"\r\n\r\nconst dataFilePath = path.join(process.cwd(), \"data\", \"cards.json\")\r\n\r\nexport async function GET(\r\n\treq: NextRequest,\r\n\t{ params }: { params: { id: Number } }\r\n) {\r\n\tconst { id } = await params\r\n\r\n\ttry {\r\n\t\tconst data = fs.readFileSync(dataFilePath, \"utf8\")\r\n\r\n\t\tif (id) {\r\n\t\t\tconst card = JSON.parse(data).find(\r\n\t\t\t\t(card: CardData) => card.id === Number(id)\r\n\t\t\t)\r\n\r\n\t\t\tif (!card) {\r\n\t\t\t\treturn NextResponse.json({ error: \"Card not found\" }, { status: 404 })\r\n\t\t\t}\r\n\r\n\t\t\treturn NextResponse.json(card, { status: 200 })\r\n\t\t}\r\n\t\treturn NextResponse.json({ error: \"Wrong id\" }, { status: 404 })\r\n\t} catch (error) {\r\n\t\tconsole.error(error)\r\n\t\treturn NextResponse.json({ error: \"Failed to load cards\" }, { status: 500 })\r\n\t}\r\n}\r\n\r\nexport async function DELETE(\r\n\treq: NextRequest,\r\n\t{ params }: { params: { id: number } }\r\n) {\r\n\tconst { id } = await params\r\n\r\n\ttry {\r\n\t\tconst data = JSON.parse(fs.readFileSync(dataFilePath, \"utf8\"))\r\n\t\tconst updatedCards = data.filter((card: CardData) => card.id !== Number(id))\r\n\t\tfs.writeFileSync(dataFilePath, JSON.stringify(updatedCards, null, 2))\r\n\t\treturn NextResponse.json({ message: \"Card deleted\" }, { status: 200 })\r\n\t} catch (error) {\r\n\t\tconsole.error(error)\r\n\t\treturn NextResponse.json(\r\n\t\t\t{ error: \"Failed to delete card\" },\r\n\t\t\t{ status: 500 }\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport async function PUT(\r\n\treq: NextRequest,\r\n\t{ params }: { params: { id: Number } }\r\n) {\r\n\tconst { id } = await params\r\n\r\n\ttry {\r\n\t\tconst data = fs.readFileSync(dataFilePath, \"utf8\")\r\n\t\tconst cards = JSON.parse(data)\r\n\r\n\t\tconst updatedData = await req.json()\r\n\r\n\t\tconst index = cards.findIndex((card: CardData) => card.id === Number(id))\r\n\r\n\t\tif (index === -1) {\r\n\t\t\treturn NextResponse.json({ error: \"Card not found\" }, { status: 404 })\r\n\t\t}\r\n\r\n\t\tcards[index] = { ...cards[index], ...updatedData }\r\n\t\tfs.writeFileSync(dataFilePath, JSON.stringify(cards, null, 2))\r\n\r\n\t\treturn NextResponse.json({ message: \"Card updated\" }, { status: 200 })\r\n\t} catch (error) {\r\n\t\tconsole.error(error)\r\n\t\treturn NextResponse.json(\r\n\t\t\t{ error: \"Failed to update card\" },\r\n\t\t\t{ status: 500 }\r\n\t\t)\r\n\t}\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;AAEA,MAAM,eAAe,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAE/C,eAAe,IACrB,GAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAErB,IAAI;QACH,MAAM,OAAO,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,cAAc;QAE3C,IAAI,IAAI;YACP,MAAM,OAAO,KAAK,KAAK,CAAC,MAAM,IAAI,CACjC,CAAC,OAAmB,KAAK,EAAE,KAAK,OAAO;YAGxC,IAAI,CAAC,MAAM;gBACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAAiB,GAAG;oBAAE,QAAQ;gBAAI;YACrE;YAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;gBAAE,QAAQ;YAAI;QAC9C;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAW,GAAG;YAAE,QAAQ;QAAI;IAC/D,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACD;AAEO,eAAe,OACrB,GAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAErB,IAAI;QACH,MAAM,OAAO,KAAK,KAAK,CAAC,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,cAAc;QACtD,MAAM,eAAe,KAAK,MAAM,CAAC,CAAC,OAAmB,KAAK,EAAE,KAAK,OAAO;QACxE,2FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,cAAc,KAAK,SAAS,CAAC,cAAc,MAAM;QAClE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACrE,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACvB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAEhB;AACD;AAEO,eAAe,IACrB,GAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAErB,IAAI;QACH,MAAM,OAAO,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,cAAc;QAC3C,MAAM,QAAQ,KAAK,KAAK,CAAC;QAEzB,MAAM,cAAc,MAAM,IAAI,IAAI;QAElC,MAAM,QAAQ,MAAM,SAAS,CAAC,CAAC,OAAmB,KAAK,EAAE,KAAK,OAAO;QAErE,IAAI,UAAU,CAAC,GAAG;YACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACrE;QAEA,KAAK,CAAC,MAAM,GAAG;YAAE,GAAG,KAAK,CAAC,MAAM;YAAE,GAAG,WAAW;QAAC;QACjD,2FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,cAAc,KAAK,SAAS,CAAC,OAAO,MAAM;QAE3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACrE,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACvB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAEhB;AACD"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}