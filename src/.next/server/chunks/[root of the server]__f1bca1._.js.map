{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://F%3A/web_lab4/app/api/cards/route.tsx"],"sourcesContent":["import { CardData } from \"@/components/TodoCard/CardData\"\r\nimport fs from \"fs\"\r\nimport { NextResponse } from \"next/server\"\r\nimport path from \"path\"\r\n\r\nconst dataFilePath = path.join(process.cwd(), \"data\", \"cards.json\")\r\n\r\nexport async function GET(request: Request) {\r\n\ttry {\r\n\t\tconst data = fs.readFileSync(dataFilePath, \"utf8\")\r\n\t\tlet cards = JSON.parse(data)\r\n\r\n\t\t// Фильтрация\r\n\t\tconst url = new URL(request.url)\r\n\t\tconst filter = url.searchParams.get(\"status\")\r\n\r\n\t\tif (filter === \"all\" || filter === null) {\r\n\t\t\treturn NextResponse.json({ cards }, { status: 200 })\r\n\t\t} else if (filter === \"true\") {\r\n\t\t\tcards = cards.filter(\r\n\t\t\t\t(card: CardData) => card.completed.toString() === \"true\"\r\n\t\t\t)\r\n\t\t} else if (filter === \"false\") {\r\n\t\t\tcards = cards.filter(\r\n\t\t\t\t(card: CardData) => card.completed.toString() === \"false\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn NextResponse.json({ cards }, { status: 200 })\r\n\t} catch (error) {\r\n\t\tconsole.error(error)\r\n\t\treturn NextResponse.json({ error: \"Failed to load cards\" }, { status: 500 })\r\n\t}\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AACA;;;;AAEA,MAAM,eAAe,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAE/C,eAAe,IAAI,OAAgB;IACzC,IAAI;QACH,MAAM,OAAO,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,cAAc;QAC3C,IAAI,QAAQ,KAAK,KAAK,CAAC;QAEvB,aAAa;QACb,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;QAC/B,MAAM,SAAS,IAAI,YAAY,CAAC,GAAG,CAAC;QAEpC,IAAI,WAAW,SAAS,WAAW,MAAM;YACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE;YAAM,GAAG;gBAAE,QAAQ;YAAI;QACnD,OAAO,IAAI,WAAW,QAAQ;YAC7B,QAAQ,MAAM,MAAM,CACnB,CAAC,OAAmB,KAAK,SAAS,CAAC,QAAQ,OAAO;QAEpD,OAAO,IAAI,WAAW,SAAS;YAC9B,QAAQ,MAAM,MAAM,CACnB,CAAC,OAAmB,KAAK,SAAS,CAAC,QAAQ,OAAO;QAEpD;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAM,GAAG;YAAE,QAAQ;QAAI;IACnD,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACD"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}